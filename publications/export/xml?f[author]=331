<?xml version="1.0" encoding="UTF-8"?><xml><records><record><source-app name="Biblio" version="7.x">Drupal-Biblio</source-app><ref-type>47</ref-type><contributors><authors><author><style face="normal" font="default" size="100%">Athena Vakali</style></author></authors><secondary-authors><author><style face="normal" font="default" size="100%">Yakhno, Tatyana M.</style></author></secondary-authors></contributors><titles><title><style face="normal" font="default" size="100%">Evolutionary Prefetching and Caching in an Independent Storage Units Model</style></title><secondary-title><style face="normal" font="default" size="100%">ADVIS</style></secondary-title><tertiary-title><style face="normal" font="default" size="100%">Lecture Notes in Computer Science</style></tertiary-title></titles><keywords><keyword><style  face="normal" font="default" size="100%">data prefetching and caching</style></keyword><keyword><style  face="normal" font="default" size="100%">object-based storage models</style></keyword><keyword><style  face="normal" font="default" size="100%">parallel storage units</style></keyword></keywords><dates><year><style  face="normal" font="default" size="100%">2000</style></year></dates><publisher><style face="normal" font="default" size="100%">Springer</style></publisher><volume><style face="normal" font="default" size="100%">1909</style></volume><pages><style face="normal" font="default" size="100%">265-274</style></pages><isbn><style face="normal" font="default" size="100%">3-540-41184-4</style></isbn><language><style face="normal" font="default" size="100%">eng</style></language><abstract><style face="normal" font="default" size="100%">&lt;p&gt;Modern applications demand support for a large number ofclients and require large scale storage subsystems. This paper presentsa theoretical model of prefetching and caching of storage objects undera parallel storage units architecture. The storage objects are definedas variable sized data blocks and a specific cache area is reserved fordata prefetching and caching. An evolutionary algorithm is proposed foridentifying the storage objects to be prefetched and cached. The storageobject prefetching approach is experimented under certain artificialworkloads of requests for a set of storage units and has shown significantperformance improvement with respect to request service times, as wellas cache and byte hit ratios.&lt;/p&gt;
</style></abstract></record></records></xml>