<?xml version="1.0" encoding="UTF-8"?><xml><records><record><source-app name="Biblio" version="7.x">Drupal-Biblio</source-app><ref-type>47</ref-type><contributors><authors><author><style face="normal" font="default" size="100%">Arvanitidis, Alexandros</style></author><author><style face="normal" font="default" size="100%">Serafi, Anna</style></author><author><style face="normal" font="default" size="100%">Athena Vakali</style></author><author><style face="normal" font="default" size="100%">Tsoumakas, Grigorios</style></author></authors><secondary-authors><author><style face="normal" font="default" size="100%">Calders, Toon</style></author><author><style face="normal" font="default" size="100%">Esposito, Floriana</style></author><author><style face="normal" font="default" size="100%">Hullermeier, Eyke</style></author><author><style face="normal" font="default" size="100%">Meo, Rosa</style></author></secondary-authors></contributors><titles><title><style face="normal" font="default" size="100%">Branty: A Social Media Ranking Tool for Brands</style></title><secondary-title><style face="normal" font="default" size="100%">ECML/PKDD (3)</style></secondary-title><tertiary-title><style face="normal" font="default" size="100%">Lecture Notes in Computer Science</style></tertiary-title></titles><dates><year><style  face="normal" font="default" size="100%">2014</style></year></dates><publisher><style face="normal" font="default" size="100%">Springer</style></publisher><volume><style face="normal" font="default" size="100%">8726</style></volume><pages><style face="normal" font="default" size="100%">432-435</style></pages><isbn><style face="normal" font="default" size="100%">978-3-662-44844-1</style></isbn><language><style face="normal" font="default" size="100%">eng</style></language></record><record><source-app name="Biblio" version="7.x">Drupal-Biblio</source-app><ref-type>47</ref-type><contributors><authors><author><style face="normal" font="default" size="100%">Moussiades, Lefteris</style></author><author><style face="normal" font="default" size="100%">Athena Vakali</style></author></authors><secondary-authors><author><style face="normal" font="default" size="100%">Flory, Andre</style></author><author><style face="normal" font="default" size="100%">Collard, Martine</style></author></secondary-authors></contributors><titles><title><style face="normal" font="default" size="100%">Benchmark graphs for the evaluation of Clustering Algorithms</style></title><secondary-title><style face="normal" font="default" size="100%">RCIS</style></secondary-title></titles><keywords><keyword><style  face="normal" font="default" size="100%">Artificial graph</style></keyword><keyword><style  face="normal" font="default" size="100%">Community structure</style></keyword><keyword><style  face="normal" font="default" size="100%">Graph clustering</style></keyword><keyword><style  face="normal" font="default" size="100%">Intra linkage ratio</style></keyword><keyword><style  face="normal" font="default" size="100%">Modularity</style></keyword></keywords><dates><year><style  face="normal" font="default" size="100%">2009</style></year></dates><publisher><style face="normal" font="default" size="100%">IEEE</style></publisher><pages><style face="normal" font="default" size="100%">197-206</style></pages><isbn><style face="normal" font="default" size="100%">978-1-4244-2864-9</style></isbn><language><style face="normal" font="default" size="100%">eng</style></language><abstract><style face="normal" font="default" size="100%">&lt;p&gt;Artificial graphs are commonly used for theevaluation of community mining and clustering algorithms. Eachartificial graph is assigned a pre-specified clustering, which iscompared to clustering solutions obtained by the algorithmsunder evaluation. Hence, the pre-specified clustering shouldcomply with specifications that are assumed to delimit a goodclustering. However, existing construction processes for artificialgraphs do not set explicit specifications for the pre-specifiedclustering. We call these graphs, randomly clustered graphs.Here, we introduce a new class of benchmark graphs which areclustered according to explicit specifications. We call themoptimally clustered graphs. We present the basic properties ofoptimally clustered graphs and propose algorithms for theirconstruction. Experimentally, we compare two communitymining algorithms using both randomly and optimally clusteredgraphs. Results of this evaluation reveal interesting insights bothfor the algorithms and the artificial graphs.&lt;/p&gt;
</style></abstract></record><record><source-app name="Biblio" version="7.x">Drupal-Biblio</source-app><ref-type>47</ref-type><contributors></contributors><titles><title><style face="normal" font="default" size="100%">Benchmark graphs for the evaluation of Clustering Algorithms</style></title></titles><dates><year><style  face="normal" font="default" size="100%">2009</style></year></dates><language><style face="normal" font="default" size="100%">eng</style></language><abstract><style face="normal" font="default" size="100%">Artificial graphs are commonly used for theevaluation of community mining and clustering algorithms. Eachartificial graph is assigned a pre-specified clustering, which iscompared to clustering solutions obtained by the algorithmsunder evaluation. Hence, the pre-specified clustering shouldcomply with specifications that are assumed to delimit a goodclustering. However, existing construction processes for artificialgraphs do not set explicit specifications for the pre-specifiedclustering. We call these graphs, randomly clustered graphs.Here, we introduce a new class of benchmark graphs which areclustered according to explicit specifications. We call themoptimally clustered graphs. We present the basic properties ofoptimally clustered graphs and propose algorithms for theirconstruction. Experimentally, we compare two communitymining algorithms using both randomly and optimally clusteredgraphs. Results of this evaluation reveal interesting insights bothfor the algorithms and the artificial graphs.</style></abstract></record><record><source-app name="Biblio" version="7.x">Drupal-Biblio</source-app><ref-type>47</ref-type><contributors></contributors><titles><title><style face="normal" font="default" size="100%">Bridge Bounding: A Local Approach for Efficient Community Discovery in Complex Networks</style></title></titles><dates><year><style  face="normal" font="default" size="100%">2009</style></year></dates><language><style face="normal" font="default" size="100%">eng</style></language><abstract><style face="normal" font="default" size="100%">&lt;p&gt;The increasing importance of Web 2.0 applications duringthe last years has created significant interest in tools for analyzingand describing collective user activities and emergingphenomena within the Web. Network structures have beenwidely employed in this context for modeling users, web resourcesand relations between them. However, the amountof data produced by modern web systems results in networksthat are of unprecedented size and complexity, and are thushard to interpret. To this end, community detection methodsattempt to uncover natural groupings of web objects byanalyzing the topology of their containing network.There are numerous techniques adopting a global perspectiveto the community detection problem, i.e. they operateon the complete network structure, thus being computationallyexpensive and hard to apply in a streaming manner. Inorder to add a local perspective to the study of the problem,we present Bridge Bounding, a local methodology for communitydetection, which explores the local network topologyaround a seed node in order to identify edges that act asboundaries to the local community. The proposed methodcan be integrated in an efficient global community detectionscheme that compares favorably to the state of the art. As acase study, we apply the method to explore the topic structureof the LYCOS iQ collaborative question/answering applicationby detecting communities in the networks createdfrom the collective tagging activity of users.&lt;/p&gt;
</style></abstract></record></records></xml>